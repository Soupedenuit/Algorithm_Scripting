function convertToRomanNum(num) {
  /*
  const character1 = "I"; // is equal to 1
  const character2 = "V"; // is equal to 5
  const character3 = "X"; // is equal to 10
  const character4 = "L"; // is equal to 50
  const character5 = "C"; // is equal to 100
  const character6 = "D"; // is equal to 500
  const character7 = "M"; // is equal to 1,000
  const character8 = "Ṽ"; // is equal to 5,000
  const character9 = "Ẋ"; // is equal to 10,000
  const character10 = "Ḹ"; // is equal to 50,000
  const character11 = "Č"; // is equal to 100,000
  */
  
  const characters = {
    1: "I",
    2: "V",
    3: "X",
    4: "L",
    5: "C",
    6: "D",
    7: "M",
    8: "Ṽ",
    9: "Ẋ",
    10: "Ḹ",
    11: "Č"
  };
  
  var roman = [];
  var numArr = num.toString().split('');
  
  const digits = {
    1: numArr[numArr.length - 1],
    3: numArr[numArr.length - 2],
    5: numArr[numArr.length - 3],
    7: numArr[numArr.length - 4],
    9: numArr[numArr.length - 5],
    11: numArr[numArr.length - 6]
  };
  
  for (let i = 1; i < numArr.length * 2; i = i + 2) {
    
    if (digits[i] > 0 && digits[i] <= 3) {
      for (let j = 0; j < digits[i]; j++) {
      roman.unshift(characters[i]);
      }
    }
  
    else if (digits[i] == 4) {
      roman.unshift(characters[i + 1]);
      roman.unshift(characters[i]);
    }
  
    else if (digits[i] == 5) {
      roman.unshift(characters[i+1]);
    }
  
    else if (digits[i] >= 6 && digits[i] <= 8) {
      for (let j = 5; j < digits[i]; j++) {
        roman.unshift(characters[i]);
      }
        roman.unshift(characters[i + 1]);
    }
  
    else if (digits[i] == 9) {
      roman.unshift(characters[i + 2]);
      roman.unshift(characters[i]);
    }
  
    else ;
    
  } //closing bracket for outer condition
  
  var result = roman.join('');
  
  console.log(digits[1]);
  console.log(digits[3]);
  if (digits[5]) { console.log(digits[5]) }
  if (digits[7]) { console.log(digits[7]) }
  if (digits[9]) { console.log(digits[9]) }
  if (digits[11]) { console.log(digits[11]) }
  console.log(result);
  return result;
}

convertToRomanNum(1973);
